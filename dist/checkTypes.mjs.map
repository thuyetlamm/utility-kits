{"version":3,"sources":["../src/checkTypes.ts"],"sourcesContent":["import { DATATYPE } from \"./types/common\"\n\nconst checkType = <T>(value:T)  =>\n    Object.prototype.toString.call(value).slice(8, -1) as DATATYPE\n\nconst isObject = <T>(value: T) => checkType(value) === DATATYPE.Object\nconst isArray  = <T>(value: T) => checkType(value) === DATATYPE.Array\nconst isNaN    = <T>(value: T) => checkType(value) === DATATYPE.NaN\nconst isFunction = <T>(value: T) => checkType(value) === DATATYPE.Function\nconst isNumber = <T>(value: T) => checkType(value) === DATATYPE.Number\nconst isString = <T>(value: T) => checkType(value) === DATATYPE.String\nconst isSymbol = <T>(value: T) => checkType(value) === DATATYPE.Symbol\nconst isNull   = <T>(value: T) => checkType(value) === DATATYPE.Null\nconst isUndefined   = <T>(value: T) => checkType(value) === DATATYPE.Undefined\n\nconst checkTypeInstance = {\n    isObject,\n    isArray,\n    isNaN,\n    isFunction,\n    checkType,\n    isString,\n    isNumber,\n    isSymbol,\n    isNull,\n    isUndefined\n}\nexport default checkTypeInstance\n\n"],"mappings":";AAEA,IAAM,YAAY,CAAI,UAClB,OAAO,UAAU,SAAS,KAAK,KAAK,EAAE,MAAM,GAAG,EAAE;AAErD,IAAM,WAAW,CAAI,UAAa,UAAU,KAAK;AACjD,IAAM,UAAW,CAAI,UAAa,UAAU,KAAK;AACjD,IAAM,QAAW,CAAI,UAAa,UAAU,KAAK;AACjD,IAAM,aAAa,CAAI,UAAa,UAAU,KAAK;AACnD,IAAM,WAAW,CAAI,UAAa,UAAU,KAAK;AACjD,IAAM,WAAW,CAAI,UAAa,UAAU,KAAK;AACjD,IAAM,WAAW,CAAI,UAAa,UAAU,KAAK;AACjD,IAAM,SAAW,CAAI,UAAa,UAAU,KAAK;AACjD,IAAM,cAAgB,CAAI,UAAa,UAAU,KAAK;AAEtD,IAAM,oBAAoB;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AACA,IAAO,qBAAQ;","names":[]}