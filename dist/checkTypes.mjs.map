{"version":3,"sources":["../src/checkTypes.ts"],"sourcesContent":["import { DATATYPE } from \"./types/common\"\n\nconst checkType = (value: object | number | string) =>\n    Object.prototype.toString.call(value).slice(8, -1)\n\nconst isObject = (value: object) => checkType(value) === DATATYPE.Object\nconst isArray = (value: object) => checkType(value) === DATATYPE.Array\nconst isNaN = (value: number) => checkType(value) === DATATYPE.NaN\nconst isFunction = (value: object) => checkType(value) === DATATYPE.Function\nconst isNumber = (value: number) => checkType(value) === DATATYPE.Number\nconst isString= (value: string) => checkType(value) === DATATYPE.String\n\nconst checkTypeInstance = {\n    isObject,\n    isArray,\n    isNaN,\n    isFunction,\n    checkType,\n    isString,\n    isNumber\n}\nexport default checkTypeInstance\n\n"],"mappings":";AAEA,IAAM,YAAY,CAAC,UACf,OAAO,UAAU,SAAS,KAAK,KAAK,EAAE,MAAM,GAAG,EAAE;AAErD,IAAM,WAAW,CAAC,UAAkB,UAAU,KAAK;AACnD,IAAM,UAAU,CAAC,UAAkB,UAAU,KAAK;AAClD,IAAM,QAAQ,CAAC,UAAkB,UAAU,KAAK;AAChD,IAAM,aAAa,CAAC,UAAkB,UAAU,KAAK;AACrD,IAAM,WAAW,CAAC,UAAkB,UAAU,KAAK;AACnD,IAAM,WAAU,CAAC,UAAkB,UAAU,KAAK;AAElD,IAAM,oBAAoB;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AACA,IAAO,qBAAQ;","names":[]}