var S=Object.defineProperty;var N=Object.getOwnPropertySymbols;var P=Object.prototype.hasOwnProperty,C=Object.prototype.propertyIsEnumerable;var h=(e,t,r)=>t in e?S(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,p=(e,t)=>{for(var r in t||(t={}))P.call(t,r)&&h(e,r,t[r]);if(N)for(var r of N(t))C.call(t,r)&&h(e,r,t[r]);return e};var f=e=>Object.prototype.toString.call(e).slice(8,-1);var a=e=>f(e)==="Function";var c=e=>f(e)==="String";var F=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,E=/^\w*$/,M=(e,t)=>Array.isArray(e)?!1:["Number","Boolean","Null","Symbol"].includes(f(e))?!0:E.test(e)||!F.test(e)||t!=null&&e in Object(t),K=M;var m=(e,t)=>{if(!a(e)||!a(t))throw new TypeError("Expected a function");let r=(...n)=>{let o=t?t.apply(null,n):n[0],s=r.cache;if(s.has(o))return s.get(o);let i=e.apply(null,n);return r.cache=s.set(o,i)||s,i};return r.cache=new(m.Cache||Map),r};m.Cache=Map;var b=m;var k=500,I=e=>{let t=b(e,(...r)=>{let{cache:n}=t;return(n==null?void 0:n.size)===k&&(n==null||n.clear()),r});return t},g=I;var A=46,R=/\\(\\)?/g,z=RegExp(`[^.[\\]]+|\\[(?:([^"'][^[]*)|(["'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))`,"g"),B=g(e=>{let t=[];return c(e)&&((e==null?void 0:e.charCodeAt(0))===A&&t.push(""),e==null||e.replace(z,(r,n,o,s)=>{var y;let i=r;o?i=(y=s==null?void 0:s.replace(R,"$1"))!=null?y:"":n&&(i=n.trim()),t.push(i)})),t}),O=B;function _(e,t){return Array.isArray(e)?e:K(e,t)?[e]:O(e)}var l=_;var U=(e,t,r)=>{if(!e||!t)return;let n=l(t,e),o=p({},e);for(let s of n)if(o=o==null?void 0:o[s],o===void 0)break;return o||r},u=U;import{Children as X,isValidElement as Z}from"react";var V=({children:e})=>{let t=null,r=null;return X.forEach(e,n=>{Z(n)&&(n.props.isTrue?n.props.isTrue&&!t&&(t=n):r=n)}),t||r};V.When=({children:e,isTrue:t})=>t&&e;V.Else=({children:e,render:t})=>t||e;import ke,{Children as Ie,Fragment as Ae}from"react";test("get one floor",()=>{let e=u({a:10},"a");expect(e).toBe(10)});test("is undifined",()=>{let e=u(void 0,"a");expect(e).toBe(void 0)});test("get function",()=>{let e=u({a:10,b:{z:1}},"b.z");expect(e).toBe(1)});test("get array",()=>{let e=u([{a:"name"}],"0.a");expect(e).toBe("name")});
//# sourceMappingURL=get.test.mjs.map