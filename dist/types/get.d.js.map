{"version":3,"sources":["../../src/types/get.d.ts"],"sourcesContent":["export type NestedKeyOf<ObjectType extends object> = {\n    [Key in keyof ObjectType & (string | number)]: ObjectType[Key] extends object\n        ? `${Key}` | `${Key}.${NestedKeyOf<ObjectType[Key]>}`\n        : `${Key}`\n}[keyof ObjectType & (string | number)]\n\nexport type NestedKeyValue<\n    T extends object,\n    Key,\n> = Key extends `${infer First}.${infer Rest}`\n    ? First extends keyof T\n        ? T[First] extends object\n            ? Rest extends NestedKeyOf<T[First]>\n                ? NestedKeyValue<T[First], Rest>\n                : never\n            : never\n        : never\n    : Key extends keyof T\n        ? T[Key]\n        : never"],"mappings":"+WAAA,IAAAA,EAAA,kBAAAC,EAAAD","names":["get_d_exports","__toCommonJS"]}