{"version":3,"sources":["../../src/components/Show/Show.tsx","../../src/components/Each/Each.tsx"],"sourcesContent":["import { Children, isValidElement, PropsWithChildren, ReactElement, ReactNode } from 'react'\nimport {Nullable} from \"../../types/common\";\n\n\ninterface ShowProps {}\n\ninterface ChildProps {\n    isTrue?: boolean\n}\n\nconst Show = ({ children }: PropsWithChildren<ShowProps>) => {\n    let when: Nullable<ReactElement<ChildProps>> = null\n    let otherwise: Nullable<ReactElement<ChildProps>> = null\n\n    Children.forEach(children, (child) => {\n        if (!isValidElement<ChildProps>(child)) return\n\n        if (!child.props.isTrue) {\n            otherwise = child\n        } else if (child.props.isTrue && !when) {\n            when = child\n        }\n    })\n\n    return when || otherwise\n}\n\nShow.When = ({ children, isTrue }: PropsWithChildren<ChildProps>) => {\n    return isTrue && children\n}\nShow.Else = ({\n                 children,\n                 render\n             }: PropsWithChildren<\n    ChildProps & {\n    render?: ReactNode\n}\n>) => {\n    return render || children\n}\n\nexport default Show","import React, { Children, Fragment } from 'react'\nimport Show from \"../Show/Show\";\n\ninterface EachProps<T> {\n    list: T[] | readonly T[];\n    render: (item: T, index: number) => React.ReactNode\n    empty?: React.ReactNode\n}\n\nconst Each = <T,>({ list, render, empty }: EachProps<T>) => {\n    return (\n        <Fragment>\n            {\n                <Show>\n                    <Show.When isTrue={Array.isArray(list) && list.length > 0}>{Children.toArray(list.map(render))}</Show.When>\n                    <Show.Else>{empty}</Show.Else>\n                </Show>\n            }\n        </Fragment>\n    )\n}\n\nexport default Each\n\n\n"],"mappings":"AAAA,OAAS,YAAAA,EAAU,kBAAAC,MAAkE,QAUrF,IAAMC,EAAO,CAAC,CAAE,SAAAC,CAAS,IAAoC,CACzD,IAAIC,EAA2C,KAC3CC,EAAgD,KAEpD,OAAAL,EAAS,QAAQG,EAAWG,GAAU,CAC7BL,EAA2BK,CAAK,IAEhCA,EAAM,MAAM,OAENA,EAAM,MAAM,QAAU,CAACF,IAC9BA,EAAOE,GAFPD,EAAYC,EAIpB,CAAC,EAEMF,GAAQC,CACnB,EAEAH,EAAK,KAAO,CAAC,CAAE,SAAAC,EAAU,OAAAI,CAAO,IACrBA,GAAUJ,EAErBD,EAAK,KAAO,CAAC,CACI,SAAAC,EACA,OAAAK,CACJ,IAKFA,GAAUL,EAGrB,IAAOM,EAAQP,ECzCf,OAAOQ,GAAS,YAAAC,EAAU,YAAAC,MAAgB,QAS1C,IAAMC,EAAO,CAAK,CAAE,KAAAC,EAAM,OAAAC,EAAQ,MAAAC,CAAM,IAEhCC,EAAA,cAACC,EAAA,KAEOD,EAAA,cAACE,EAAA,KACGF,EAAA,cAACE,EAAK,KAAL,CAAU,OAAQ,MAAM,QAAQL,CAAI,GAAKA,EAAK,OAAS,GAAIM,EAAS,QAAQN,EAAK,IAAIC,CAAM,CAAC,CAAE,EAC/FE,EAAA,cAACE,EAAK,KAAL,KAAWH,CAAM,CACtB,CAER,EAIDK,EAAQR","names":["Children","isValidElement","Show","children","when","otherwise","child","isTrue","render","Show_default","React","Children","Fragment","Each","list","render","empty","React","Fragment","Show_default","Children","Each_default"]}