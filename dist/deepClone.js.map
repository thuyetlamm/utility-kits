{"version":3,"sources":["../src/deepClone.ts"],"sourcesContent":["const deepClone = <T>(obj: T): T => {\n    // Check if the value is null or not an object\n    if (obj === null || typeof obj !== \"object\") {\n        return obj\n    }\n\n    // Handle arrays\n    if (Array.isArray(obj)) {\n        const copy = []\n        for (let i = 0; i < obj.length; i++) {\n            copy[i] = deepClone(obj[i])\n        }\n        return copy as T\n    }\n\n    // Handle objects\n    if (obj instanceof Object) {\n        const copy = {} as T\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                copy[key as keyof T] = deepClone(obj[key])\n            }\n        }\n        return copy as T\n    }\n\n    throw new Error(\"Unable to copy object! Its type isn't supported.\")\n}\nexport default deepClone\n"],"mappings":"yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAMI,EAAgBC,GAAc,CAEhC,GAAIA,IAAQ,MAAQ,OAAOA,GAAQ,SAC/B,OAAOA,EAIX,GAAI,MAAM,QAAQA,CAAG,EAAG,CACpB,IAAMC,EAAO,CAAC,EACd,QAASC,EAAI,EAAGA,EAAIF,EAAI,OAAQE,IAC5BD,EAAKC,CAAC,EAAIH,EAAUC,EAAIE,CAAC,CAAC,EAE9B,OAAOD,CACX,CAGA,GAAID,aAAe,OAAQ,CACvB,IAAMC,EAAO,CAAC,EACd,QAAWE,KAAOH,EACVA,EAAI,eAAeG,CAAG,IACtBF,EAAKE,CAAc,EAAIJ,EAAUC,EAAIG,CAAG,CAAC,GAGjD,OAAOF,CACX,CAEA,MAAM,IAAI,MAAM,kDAAkD,CACtE,EACOJ,EAAQE","names":["deepClone_exports","__export","deepClone_default","__toCommonJS","deepClone","obj","copy","i","key"]}