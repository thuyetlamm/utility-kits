{"version":3,"sources":["../../src/utils/assignValue.ts"],"sourcesContent":["\n/** Used to check objects for own properties. */\nconst hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent.\n */\n\nfunction baseAssignValue<T extends object,K extends keyof T>(object : T, key:K, value: T[K]) {\n    if (key === '__proto__') {\n        Object.defineProperty(object, key, {\n            'configurable': true,\n            'enumerable': true,\n            'value': value,\n            'writable': true\n        })\n    } else {\n        object[key] = value\n    }\n}\n\nfunction eq<T>(value :T, other :T) {\n    return value === other || (value !== value && other !== other);\n}\n\n\nfunction assignValue<T extends object,K extends keyof T>(object :T, key : K, value : T[K]) {\n    const objValue = object[key]\n\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value))) {\n        if (value !== 0 || (1 / Number(value)) === (1 / Number(objValue))) {\n            baseAssignValue(object, key, value)\n        }\n    } else if (value === undefined && !(key in object)) {\n        baseAssignValue(object, key, value)\n    }\n}\n\nexport default assignValue"],"mappings":"yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAEA,IAAMI,EAAiB,OAAO,UAAU,eAMxC,SAASC,EAAoDC,EAAYC,EAAOC,EAAa,CACrFD,IAAQ,YACR,OAAO,eAAeD,EAAQC,EAAK,CAC/B,aAAgB,GAChB,WAAc,GACd,MAASC,EACT,SAAY,EAChB,CAAC,EAEDF,EAAOC,CAAG,EAAIC,CAEtB,CAEA,SAASC,EAAMD,EAAUE,EAAU,CAC/B,OAAOF,IAAUE,GAAUF,IAAUA,GAASE,IAAUA,CAC5D,CAGA,SAASC,EAAgDL,EAAWC,EAASC,EAAc,CACvF,IAAMI,EAAWN,EAAOC,CAAG,EAErBH,EAAe,KAAKE,EAAQC,CAAG,GAAKE,EAAGG,EAAUJ,CAAK,EAIjDA,IAAU,QAAa,EAAED,KAAOD,IACvCD,EAAgBC,EAAQC,EAAKC,CAAK,GAJ9BA,IAAU,GAAM,EAAI,OAAOA,CAAK,IAAQ,EAAI,OAAOI,CAAQ,IAC3DP,EAAgBC,EAAQC,EAAKC,CAAK,CAK9C,CAEA,IAAON,EAAQS","names":["assignValue_exports","__export","assignValue_default","__toCommonJS","hasOwnProperty","baseAssignValue","object","key","value","eq","other","assignValue","objValue"]}