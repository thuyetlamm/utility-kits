{"version":3,"sources":["../../src/checkTypes.ts","../../src/utils/isKey.ts"],"sourcesContent":["import { DATATYPE } from \"./types/common\"\n\nexport const checkType = <T>(value:T)  =>\n    Object.prototype.toString.call(value).slice(8, -1) as DATATYPE\n\nexport const isObject = <T>(value: T) => checkType(value) === DATATYPE.Object\nexport const isArray  = <T>(value: T) => checkType(value) === DATATYPE.Array\nexport const isNaN    = <T>(value: T) => checkType(value) === DATATYPE.NaN\nexport const isFunction = <T>(value: T) => checkType(value) === DATATYPE.Function\nexport const isNumber = <T>(value: T) => checkType(value) === DATATYPE.Number\nexport const isString = <T>(value: T) => checkType(value) === DATATYPE.String\nexport const isSymbol = <T>(value: T) => checkType(value) === DATATYPE.Symbol\nexport const isNull   = <T>(value: T) => checkType(value) === DATATYPE.Null\nexport const isUndefined   = <T>(value: T) => checkType(value) === DATATYPE.Undefined\n\nconst checkTypeInstance = {\n    isObject,\n    isArray,\n    isNaN,\n    isFunction,\n    checkType,\n    isString,\n    isNumber,\n    isSymbol,\n    isNull,\n    isUndefined\n}\nexport default checkTypeInstance\n\n","import {DATATYPE} from \"../types/common\";\nimport { checkType } from \"../checkTypes\";\n\n/** Used to match property names within property paths. */\nconst reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/\nconst reIsPlainProp = /^\\w*$/\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n */\nconst isKey = <T extends string>(value :T, object : object): boolean => {\n    if (Array.isArray(value)) {\n        return false\n    }\n\n    if([DATATYPE.Number,DATATYPE.Boolean,DATATYPE.Null,DATATYPE.Symbol].includes(checkType(value))) {\n        return true\n    }\n    return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object))\n}\n\nexport default isKey"],"mappings":";AAEO,IAAM,YAAY,CAAI,UACzB,OAAO,UAAU,SAAS,KAAK,KAAK,EAAE,MAAM,GAAG,EAAE;;;ACCrD,IAAM,eAAe;AACrB,IAAM,gBAAgB;AAMtB,IAAM,QAAQ,CAAmB,OAAU,WAA6B;AACpE,MAAI,MAAM,QAAQ,KAAK,GAAG;AACtB,WAAO;AAAA,EACX;AAEA,MAAG,yFAA+D,EAAE,SAAS,UAAU,KAAK,CAAC,GAAG;AAC5F,WAAO;AAAA,EACX;AACA,SAAO,cAAc,KAAK,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,KACvD,UAAU,QAAQ,SAAS,OAAO,MAAM;AACjD;AAEA,IAAO,gBAAQ;","names":[]}