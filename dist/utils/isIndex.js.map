{"version":3,"sources":["../../src/utils/isIndex.ts","../../src/checkTypes.ts"],"sourcesContent":["import { isNumber, isSymbol } from \"../checkTypes\";\n\n/** Used as references for various `Number` constants. */\nconst MAX_SAFE_INTEGER = 9007199254740991\n\n/** Used to detect unsigned integer values. */\nconst reIsUint = /^(?:0|[1-9]\\d*)$/\n\n\nfunction isIndex<T extends string | symbol | number>(value :T, length : number = MAX_SAFE_INTEGER) : boolean {\n\n    return !!length &&\n        (isNumber(value as number) ||\n            (!isSymbol(value as string) && reIsUint.test(value as string))) &&\n        (Number(value) > -1 && Number(value) % 1 === 0 && Number(value) < length)\n}\n\n\nexport default isIndex","import { DATATYPE } from \"./types/common\"\n\nexport const checkType = <T>(value:T)  =>\n    Object.prototype.toString.call(value).slice(8, -1) as DATATYPE\n\nexport const isObject = <T>(value: T) => checkType(value) === DATATYPE.Object\nexport const isArray  = <T>(value: T) => checkType(value) === DATATYPE.Array\nexport const isNaN    = <T>(value: T) => checkType(value) === DATATYPE.NaN\nexport const isFunction = <T>(value: T) => checkType(value) === DATATYPE.Function\nexport const isNumber = <T>(value: T) => checkType(value) === DATATYPE.Number\nexport const isString = <T>(value: T) => checkType(value) === DATATYPE.String\nexport const isSymbol = <T>(value: T) => checkType(value) === DATATYPE.Symbol\nexport const isNull   = <T>(value: T) => checkType(value) === DATATYPE.Null\nexport const isUndefined   = <T>(value: T) => checkType(value) === DATATYPE.Undefined\n\nconst checkTypeInstance = {\n    isObject,\n    isArray,\n    isNaN,\n    isFunction,\n    checkType,\n    isString,\n    isNumber,\n    isSymbol,\n    isNull,\n    isUndefined\n}\nexport default checkTypeInstance\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACEO,IAAM,YAAY,CAAI,UACzB,OAAO,UAAU,SAAS,KAAK,KAAK,EAAE,MAAM,GAAG,EAAE;AAM9C,IAAM,WAAW,CAAI,UAAa,UAAU,KAAK;AAEjD,IAAM,WAAW,CAAI,UAAa,UAAU,KAAK;;;ADRxD,IAAM,mBAAmB;AAGzB,IAAM,WAAW;AAGjB,SAAS,QAA4C,OAAU,SAAkB,kBAA4B;AAEzG,SAAO,CAAC,CAAC,WACJ,SAAS,KAAe,KACpB,CAAC,SAAS,KAAe,KAAK,SAAS,KAAK,KAAe,OAC/D,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,IAAI,MAAM,KAAK,OAAO,KAAK,IAAI;AAC1E;AAGA,IAAO,kBAAQ;","names":[]}